<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
==========================
| page:     test.mk16.de |
| name:     mmemory.h    |
| language: en           |
| type:     Reference    |
| version:  1.0          |
==========================
-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<title>buffer.h Reference</title>
		
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content="buffer.h Reference; #include &quot;mmemory.h&quot;&nbsp; /* memnew, MMEMORY_ARR, memedi, memdel */" />
		<meta name="keywords" content="buffer.h reference, buffer reference, buffer_h reference" />
		<link rel="icon" type="image/vnd.microsoft.icon" href="/images/reference.ico" />
		<link rel="shortcut icon" type="image/vnd.microsoft.icon" href="/images/reference.ico" />
		
		<style type="text/css">
			table tr th {
				background-color: maroon;
				color: white;
			}
			
			table tr td, table tr th {
				border: 1px solid black;
			}
			
			table tr td p {
				display: inline;	
			}
			
			code {
				border: 1px solid gray;
				display: inline-block;
			}
		</style>
	</head>
	<body>
		<div>
			<h1>buffer.h Reference</h1>
			
			<a href="http://mk16.de/?page=Impressum" target="_blank">Impressum / Imprint</a>
			
			<div>
				<h2>Files</h2>
				
				<div>
					<h3>C</h3>
					<table>
						<thead>
							<tr>
								<th>File</th>
								<th>Download</th>
								<th>Size</th>
								<th>Description</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>buffer.h</td>
								<td><a href="//test.mk16.de/scriptFiles/buffer.h" target="_blank">test.mk16.de/scriptFiles/buffer.h</a></td>
								<td>858 Bytes(B)</td>
								<td>C header file</td>
							</tr>
							<tr>
								<td>buffer.c</td>
								<td><a href="//test.mk16.de/scriptFiles/buffer.h" target="_blank">test.mk16.de/scriptFiles/buffer.c</a></td>
								<td>2.7 KiloBytes(KB)</td>
								<td>C code file</td>
							</tr>
							<tr>
								<td>buffer.i</td>
								<td><a href="//test.mk16.de/scriptFiles/buffer.i" target="_blank">test.mk16.de/scriptFiles/buffer.i</a></td>
								<td>11 KiloBytes(KB)</td>
								<td>Preprocessor file</td>
							</tr>
							<tr>
								<td>buffer.o</td>
								<td><a href="//test.mk16.de/scriptFiles/buffer.o" target="_blank">test.mk16.de/scriptFiles/buffer.o</a></td>
								<td>1.8 KiloByte(KB)</td>
								<td>Object file</td>
							</tr>
							<tr>
								<td>buffer.s</td>
								<td><a href="//test.mk16.de/scriptFiles/buffer.s" target="_blank">test.mk16.de/scriptFiles/buffer.s</a></td>
								<td>5.6 KiloByte(KB)</td>
								<td>Assembler source code</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
			
			<div>
				<h2>Functions</h2>
				<table>
					<thead>
						<tr>
							<th>Function/Declaration</th>
							<th>Description</th>
							<th>Argument 1</th>
							<th>Argument 2</th>
							<th>Argument 3</th>
							<th>Return</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>int CreateBuffer(buffer * buf, size_t size, size_t elem);</td>
							<td>Create a Buffer</td>
							<td>The buffer to be edited</td>
							<td>The size of the buffer(in byte)</td>
							<td>The size of a Element(in byte)</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
						<tr>
							<td>void * GetBuffer(buffer * buf)</td>
							<td>Return a pointer to current buffer value</td>
							<td>The buffer from which to return the pointer</td>
							<td>None</td>
							<td>None</td>
							<td>Pointer to current buffer value</td>
						</tr>
						<tr>
							<td>void * GetBufferByIndex(buffer * buf, size_t index)</td>
							<td>Return a pointer to a buffer value</td>
							<td>The buffer from which to return the pointer</td>
							<td>The index</td>
							<td>None</td>
							<td>Pointer to a buffer value</td>
						</tr>
						<tr>
							<td>int EditBuffer(buffer * buf, size_t size, size_t elem)</td>
							<td>Edit the size of a buffer</td>
							<td>The buffer to be edited</td>
							<td>The size of the buffer(in byte)</td>
							<td>The size of a Element(in byte)</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
						<tr>
							<td>void DeleteBuffer(buffer * buf)</td>
							<td>Delete a buffer</td>
							<td>The address of the buffer to be deleted</td>
							<td>None</td>
							<td>None</td>
							<td>None</td>
						</tr>
						<tr>
							<td>int NextBuffer(buffer * buf)</td>
							<td>Set the cursor(buffer.ptr) up</td>
							<td>The address of the buffer from which the cursor should be up.</td>
							<td>None</td>
							<td>None</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
						<tr>
							<td>int LastBuffer(buffer * buf)</td>
							<td>Set the cursor(buffer.ptr) down</td>
							<td>The address of the buffer from which the cursor should be down.</td>
							<td>None</td>
							<td>None</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
						<tr>
							<td>int GoNextBuffer(buffer * buf, size_t index)</td>
							<td>Set the cursor(buffer.ptr) quick up</td>
							<td>The address of the buffer from which the cursor should be moved.</td>
							<td>The number, the buffer, around which the cursor should be up.</td>
							<td>None</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
						<tr>
							<td>int GoLastBuffer(buffer * buf, size_t index)</td>
							<td>Set the cursor(buffer.ptr) quick down</td>
							<td>The address of the buffer from which the cursor should be down.</td>
							<td>The number, the buffer, around which the cursor should be lowered.</td>
							<td>None</td>
							<td>Returns 0 on failure, otherwise 1.</td>
						</tr>
					</tbody>
				</table>
			</div>
			
			<div>
				<h2>Macros</h2>
				<table>
					<thead>
						<tr>
							<th>Macro</th>
							<th>Description</th>
							<th>Value</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>BUFFER_H</td>
							<td>None</td>
							<td>None</td>
						</tr>
						<tr>
							<td>BUF(buf, type)</td>
							<td>Quick access to the buffer of the current cursor</td>
							<td>(* ((type *) GetBuffer(&amp;buf)))</td>
						</tr>
					</tbody>
				</table>
			</div>
				
			<div>
				<h2>Types</h2>
				<table>
					<thead>
						<tr>
							<th>Type</th>
							<th>Description</th>
							<th>Hint(s)</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>buffer</td>
							<td>Buffer type</td>
							<td>None</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
			
		<div>
			<h2>Example</h2>
			<code>
				#include &lt;stdio.h&gt;<br />
				#include &quot;buffer.h&quot;<br />
				<br />
				int main()<br />
				{<br />
				&nbsp;&nbsp;&nbsp; buffer buf;<br />
				&nbsp;&nbsp;&nbsp; CreateBuffer(&amp;buf, 2 * sizeof(int), sizeof(int));<br />
				<br />
				&nbsp;&nbsp;&nbsp; * (int *) GetBuffer(&amp;buf) = 1;<br />
				&nbsp;&nbsp;&nbsp; * (int *) GetBufferByIndex(&amp;buf, 1) = 2;<br />
				<br />
				&nbsp;&nbsp;&nbsp; NextBuffer(&amp;buf);<br />
				&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, BUF(buf, int));<br />
				<br />
				&nbsp;&nbsp;&nbsp; EditBuffer(&amp;buf, 3*sizeof(int), sizeof(int));<br />
				&nbsp;&nbsp;&nbsp; NextBuffer(&amp;buf);<br />
				&nbsp;&nbsp;&nbsp; * (int *) GetBuffer(&amp;buf) = 3;<br />
				<br />
				&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, * (int *) GetBuffer(&amp;buf));<br />
				<br />
				&nbsp;&nbsp;&nbsp; GoLastBuffer(&amp;buf, 5);<br />
				<br />
				&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, * (int *) GetBuffer(&amp;buf));<br />
				<br />
				&nbsp;&nbsp;&nbsp; GoNextBuffer(&amp;buf, 5);<br />
				<br />
				&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, * (int *) GetBuffer(&amp;buf));<br />
				<br />
				&nbsp;&nbsp;&nbsp; DeleteBuffer(&amp;buf);<br />
				&nbsp;&nbsp;&nbsp; return 0;<br />
				}
			</code>
			<p>Output: 2313</p>
		</div>
		<div id="footer">
			<table>
				<tbody>
					<tr>
						<td>Web author/Author: Marek K.</td>
						<td><a href="http://mk16.de/?page=Impressum" target="_blank">Impressum / Imprint</a></td>
					</tr>
					<tr>
						<td><p><a href="http://validator.w3.org/check?uri=https%3A%2F%2Ftest.mk16.de%2Fprojects%2Fbuffer_reference.xhtml" target="_blank"><img src="https://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Transitional" height="31" width="88" /></a></p></td>
						<td><p><a href="https://jigsaw.w3.org/css-validator/check/referer" target="_blank"><img style="border:0;width:88px;height:31px" src="https://jigsaw.w3.org/css-validator/images/vcss" alt="CSS is valid!" /></a></p></td>
					</tr>
				</tbody>
			</table>
		</div>
	</body>
</html>