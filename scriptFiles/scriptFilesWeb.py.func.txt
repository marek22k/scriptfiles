#!/usr/bin/python
# -*- coding: ISO-8859-1 -*-

import BaseHTTPServer;
import httplib;
import re;

def getfile(files):
    g = httplib.HTTPConnection('test.mk16.de',80);
    header = {                                              # Def HTTP-Header
        'Host':'test.mk16.de',
        'Content-Type':'text/html'
    }
    g.request('GET','/scriptFiles/' + files,headers=header);
    r = g.getresponse();
    ret = r.read();
    if(r.status != 200): # if not forbidden or not found or error
        ret = r.reason;
    return ret;          # Return file or error-info

def fIndex(path, search=''):
    code = '';
    g = httplib.HTTPConnection('test.mk16.de',80);
    header = {                                   # Def HTTP-Header
        'Host':'test.mk16.de',
        'Content-Type':'text/html',
        'F':'0',
        'P':'*'+search+'*'
    }
    g.request('GET','/scriptFiles/' + path + '?F=0&P=*' + search + '*',headers=header);
    r = g.getresponse(); # Get HTTP-Response
    code = r.read(); # Get HTTP-Response-Content
    
    #RegEx
    RegEx = r'\<a href\=\"?(\S+)\">([^>]*)\<\/a\>'; # Def RegEx
    
    result = re.findall(RegEx, code);               # Find in code RegExs
    w = 0;
    ret = '';
    while True:                                     # While for output reult of RegExs
        try:
            x = result[w];
        except:
            break;
        if(x == None or x == ''):
            break;
        if(x[0] != '/'):
            ret += "<a href='" + x[0] + "'>" + x[0] + "</a><br />\n";
        w += 1;
    return ret;

def getHeaders(s):
        s.send_header("Host", "127.0.0.1");
        s.send_header("Content-Type", "text/html");
        s.send_header("Server", "Powered by mk16.de");

class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):
       def do_HEAD(s):
           s.send_response(200);
           getHeaders(s);
           s.end_headers();
       def do_GET(s):
           s.send_response(200);
           getHeaders(s);
           s.end_headers();
           htmlHead = """<style type="text/css">
body{
background-color: white;
background-image: none;
}
a{
text-decoration:none;
border-bottom: 1px solid black;
outline: 1px solid orange;
display: inline-block;
margin-bottom: 5px;
padding: 1.5px;
}
.window0 {
z-index: 3;
}
.window1 {
margin-top: 10px;
z-index: 5;
}
.window0, .window1 {
background-color: yellow;
padding: 5px;
border: 1px dotted green;
overflow: scroll
display: block;
}
</style>""";
           s.wfile.write("<!DOCTYPE html><html><head><title>Data " + s.path + "</title>"+htmlHead+"</head>");
           s.wfile.write("<body><div class='window0'><a href='../'>../</a><br /><a href='./'>./</a><br />" + fIndex(s.path) + "</div>");
           x = getfile(s.path);
           y = s.path.split('.');
           try:
               if(y[3] == 'txt'):
                   s.wfile.write("<pre class='window1'>"+x+"</pre>");
               else:
                   print(x+'--'+y+'--'+z);
           except:
               True;
           s.wfile.write("</body></html>");

def startLocalhost(server_address):
    
    ip = server_address.split(':')[0];
    port = int(server_address.split(':')[1]);

    httpd = BaseHTTPServer.HTTPServer((ip, port), MyHandler);
    
    sa = httpd.socket.getsockname();
    try:
        httpd.serve_forever();
    except:
        True;

print("scriptFilesWeb 127.0.0.1:5647");
startLocalhost('127.0.0.1:5647');       # Edit IP:PORT